version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: finance-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-finance_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-YOUR_SECURE_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD:-trust}
      TZ: Asia/Jakarta
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - finance-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-finance_db}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Go Backend Service
  finance-backend:
    build:
      context: ./finance-backend-go
      dockerfile: Dockerfile
    container_name: finance-backend-go
    environment:
      - PORT=${BACKEND_PORT:-8080}
      - GIN_MODE=${GIN_MODE:-debug}
      - JWT_SECRET=${JWT_SECRET:-PLEASE_CHANGE_THIS_SECRET}
      - DATABASE_DSN=host=postgres user=${POSTGRES_USER:-postgres} password=${POSTGRES_PASSWORD:-YOUR_SECURE_PASSWORD} dbname=${POSTGRES_DB:-finance_db} port=5432 sslmode=disable TimeZone=Asia/Jakarta
      - AI_SERVICE_URL=http://categorizer-ai:${AI_SERVICE_PORT:-5000}
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - finance-network
    volumes:
      - ./finance-backend-go:/app
    command: go run .
    restart: unless-stopped

  # Python AI Service
  categorizer-ai:
    build:
      context: ./categorizer-ai-service
      dockerfile: Dockerfile
    container_name: categorizer-ai-service
    environment:
      - PORT=${AI_SERVICE_PORT:-5000}
      - FLASK_ENV=${FLASK_ENV:-development}
    ports:
      - "${AI_SERVICE_PORT:-5000}:5000"
    networks:
      - finance-network
    volumes:
      - ./categorizer-ai-service:/app
      - ./models:/app/models
    command: python app.py
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  finance-network:
    driver: bridge